trigger:
  branches:
    include: [develop, qa, master]

pool: DTTPool

variables:
  BUILD_ARTIFACT_NAME: 'SoloQuest-$(Build.BuildId).apk'

stages:
  - stage: Build
    displayName: 'Build via EAS'
    jobs:
      - job: EAS_Build
        pool: DTTPool
        steps:

          # 1) Setup Node.js
          - task: NodeTool@0
            inputs:
              versionSpec: '22.x'

          # 2) Instalar EAS CLI
          - script: npm install -g eas-cli
            displayName: 'Instalar EAS CLI'
            # O passo 'script' não possui 'shell' como propriedade válida :contentReference[oaicite:2]{index=2}

          # 3) Instalar dependências do projeto
          - script: npm install
            displayName: 'Instalar Dependências'

          # 4) Gerar APK via EAS (build remoto pelo EAS CLI)
          - script: |
              eas build --platform android --non-interactive --no-wait
            displayName: 'Gerar APK via EAS'
            env:
              # EXPO_TOKEN deve estar configurado como variável secreta no portal do Azure DevOps :contentReference[oaicite:3]{index=3}
              EXPO_TOKEN: $(EXPO_TOKEN)

          # 5) Instalar jq no Windows (para processar JSON)
          - script: |
              curl -L -o jq.exe https://github.com/stedolan/jq/releases/download/jq-1.6/jq-win64.exe
              mkdir C:\jq
              move jq.exe C:\jq
              setx PATH "%PATH%;C:\jq"
            displayName: 'Instalar jq no Windows'

          # 6) Baixar APK gerado usando tarefa Bash@3 (permite script Bash inline)
          - task: Bash@3
            displayName: 'Baixar APK Gerado'
            inputs:
              targetType: 'inline'
              script: |
                BUILD_ID=$(eas build:list --platform android --status finished --json | jq -r '.[0].id')
                eas build:download $BUILD_ID --output $(Pipeline.Workspace)/$(BUILD_ARTIFACT_NAME)
            env:
              # A Bash task no Windows ainda respeita variáveis de ambiente definidas no portal :contentReference[oaicite:4]{index=4}
              EXPO_TOKEN: $(EXPO_TOKEN)

          # 7) Publicar artefato
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Pipeline.Workspace)/$(BUILD_ARTIFACT_NAME)'
              ArtifactName: 'SoloQuestBuild'
              publishLocation: 'Container'

  - stage: Deploy_Develop
    displayName: 'Deploy para Develop'
    dependsOn: Build
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
    jobs:
      - job: Deploy_Develop
        steps:
          - download: current
            artifact: SoloQuestBuild

          - script: |
              mkdir "C:\Deploy\SoloQuest\Develop" 2>nul || echo "Pasta já existe"
              xcopy /Y "$(Pipeline.Workspace)\SoloQuestBuild\$(BUILD_ARTIFACT_NAME)" "C:\Deploy\SoloQuest\Develop"
            displayName: 'Instalar em Develop'

  - stage: Deploy_QA
    displayName: 'Deploy para QA'
    dependsOn: Build
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/qa')
    jobs:
      - job: Deploy_QA
        steps:
          - download: current
            artifact: SoloQuestBuild

          - script: |
              mkdir "C:\Deploy\SoloQuest\QA" 2>nul || echo "Pasta já existe"
              xcopy /Y "$(Pipeline.Workspace)\SoloQuestBuild\$(BUILD_ARTIFACT_NAME)" "C:\Deploy\SoloQuest\QA"
            displayName: 'Instalar em QA'

  - stage: Deploy_Prod
    displayName: 'Deploy para Prod'
    dependsOn: Build
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    jobs:
      - deployment: Deploy_Prod
        environment: Production
        strategy:
          rolling:
            maxParallel: 2
            deploy:
              steps:
                - download: current
                  artifact: SoloQuestBuild

                - script: |
                    mkdir "C:\Deploy\SoloQuest\Production" 2>nul || echo "Pasta já existe"
                    xcopy /Y "$(Pipeline.Workspace)\SoloQuestBuild\$(BUILD_ARTIFACT_NAME)" "C:\Deploy\SoloQuest\Production"
                  displayName: 'Instalar em Prod'
