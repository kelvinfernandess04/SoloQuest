trigger:
  branches:
    include: [develop, qa, master]  # Branches atualizados

pool: DTTPool

stages:
- stage: Build
  displayName: 'Build do App'
  jobs:
  - job: Build_Job
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
    
    - script: npm install
      displayName: 'Instalar Dependências'
    
    - script: npm run android
      displayName: 'Build Android'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/android/app/build/outputs/apk'
        ArtifactName: 'SoloQuestBuild'
        publishLocation: 'Container'

- stage: Deploy_Develop
  displayName: 'Deploy para Develop'
  dependsOn: Build
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')  # Condição para develop
  jobs:
  - job: Deploy_Develop
    steps:
    - download: current
      artifact: SoloQuestBuild
    
    - script: |
        echo "Criando pasta de destino se não existir..."
        mkdir "C:\Deploy\SoloQuest\Develop" || echo "Pasta já existe"
        
        echo "Copiando APK..."
        xcopy /Y "$(Pipeline.Workspace)\SoloQuestBuild\*" "C:\Deploy\SoloQuest\Develop"
      displayName: 'Copiar para Develop'

- stage: Deploy_QA
  displayName: 'Deploy para QA'
  dependsOn: Build
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/qa')  # Condição para QA
  jobs:
  - job: Deploy_QA
    steps:
    - download: current
      artifact: SoloQuestBuild
    
    - script: |
        echo "Criando pasta de destino se não existir..."
        mkdir "C:\Deploy\SoloQuest\QA" || echo "Pasta já existe"
        
        echo "Copiando APK..."
        xcopy /Y "$(Pipeline.Workspace)\SoloQuestBuild\*" "C:\Deploy\SoloQuest\QA"
      displayName: 'Copiar para QA'

- stage: Deploy_Prod
  displayName: 'Deploy para Prod'
  dependsOn: Build
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  # Condição para master
  jobs:
  - deployment: Deploy_Prod
    environment: Production
    strategy:
      rolling:
        maxParallel: 2
        deploy:
          steps:
          - download: current
            artifact: SoloQuestBuild
          
          - script: |
              echo "Criando pasta de destino se não existir..."
              mkdir "C:\Deploy\SoloQuest\Production" || echo "Pasta já existe"
              
              echo "Copiando APK..."
              xcopy /Y "$(Pipeline.Workspace)\SoloQuestBuild\*" "C:\Deploy\SoloQuest\Production"
            displayName: 'Copiar para Prod'